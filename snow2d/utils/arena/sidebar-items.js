initSidebarItems({"macro":[["arena","Creates an arena and inserts given values. Note that you might to have to annotate your `Arena<T>` when the type inference doesn’t work well."]],"mod":[["example","Example code and documentation on safety"],["iter","`toy_arena` iterator types"],["serde","Serde support (`feature = [\"serde\"]`, which is enabled by default)"],["tree","Rooted tree layered on top of the generational arena"]],"struct":[["Arena","Generational arena"],["ArenaCell","(UB) Mutable access to multiple items in [`Arena`] at the cost of runtime check. Note that the cell does not track drops, so you can’t borrow an item once after you borrow it mutably."],["Index","[`Slot`] + [`Gen`]. Takes 8 bytes for [`DefaultGen`]"],["Slot","Index of the backing `Vec` in [`Arena`]. Can be upgrade to [`Index`] by arena, but users are encouraged to perfer mutable iterators."]],"trait":[["Gen","Generation type, one of the unsized `NonZero` types in [`std::num`]"]],"type":[["DefaultGen","Default generation type used by arena"]]});